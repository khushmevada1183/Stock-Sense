name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Lint frontend
      working-directory: ./frontend
      run: npm run lint

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: [lint]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Build TypeScript
      working-directory: ./backend
      run: npm run build
    
    - name: Run backend tests
      working-directory: ./backend
      run: npm test
    
    - name: Run API tests
      working-directory: ./backend
      run: npm run test:api
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/coverage/
        retention-days: 7

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: [lint]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: frontend/coverage/
        retention-days: 7
  
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Build backend
      working-directory: ./backend
      run: npm run build
    
    - name: Start backend server
      working-directory: ./backend
      run: npm run dev:simple &
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Start frontend server
      working-directory: ./frontend
      run: npm start &
    
    - name: Wait for servers to start
      run: |
        echo "Waiting for servers to start..."
        sleep 30
        curl -s http://localhost:3000 || echo "Frontend not responding"
        curl -s http://localhost:5002/api/health || echo "Backend not responding"
    
    - name: Run Cypress tests
      working-directory: ./frontend
      run: npm run cypress:headless
      
    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: frontend/cypress/screenshots/
        retention-days: 7
  
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [backend-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup k6
      uses: grafana/k6-action@v0.2.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Build backend
      working-directory: ./backend
      run: npm run build
    
    - name: Start backend server
      working-directory: ./backend
      run: npm run dev:simple &
      
    - name: Wait for server to start
      run: |
        echo "Waiting for backend server to start..."
        sleep 20
        curl -s http://localhost:5002/api/health || echo "Backend not responding"
    
    - name: Run performance tests
      run: k6 run performance/api-load-test.js
      
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance/results/
        retention-days: 7

  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: [e2e-tests, performance-tests]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Build backend
      working-directory: ./backend
      run: |
        npm ci
        npm run build
    
    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build
    
    - name: Upload backend artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: backend/dist/
        retention-days: 7
    
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/.next/
        retention-days: 7

  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download backend artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: backend/dist
    
    - name: Download frontend artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/.next
    
    - name: Deploy to development
      run: |
        echo "Deploying to development environment"
        # Add your deployment commands here
        # For example: vercel --prod (for Vercel)
        # or: aws s3 sync ./frontend/.next s3://your-bucket/ (for AWS S3)

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download backend artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: backend/dist
    
    - name: Download frontend artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/.next
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add your deployment commands here

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download backend artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: backend/dist
    
    - name: Download frontend artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/.next
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add your deployment commands here 